/**
* @license Apache-2.0
*
* Copyright (c) 2025 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var glob = require( 'glob' );
var copy = require( '@stdlib/utils/copy' );
var validate = require( './validate.js' );
var lint = require( './lint.js' );


// VARIABLES //

var DEFAULTS = require( './defaults.json' );


// MAIN //

/**
* Synchronously lints @stdlib package.json names to ensure they match their directory location.
*
* @param {Options} [options] - function options
* @param {string} [options.dir] - root directory from which to search for @stdlib package.json files to lint
* @param {string} [options.pattern] - glob pattern
* @param {(string|StringArray)} [options.ignore] - glob pattern(s) to exclude
* @throws {TypeError} must provide valid options
* @returns {ObjectArray} lint errors
*
* @example
* var errs = lintSync();
* if ( errs.length ) {
*     console.error( JSON.stringify( errs ) );
* } else {
*     console.log( 'No detected errors.' );
* }
*
* @example
* var opts = {
*     'dir': './@stdlib/math/base'
* };
* var errs = lintSync( opts );
* if ( errs.length ) {
*     console.error( JSON.stringify( errs ) );
* } else {
*     console.log( 'No detected errors.' );
* }
*/
function lintSync( options ) {
	var errors;
	var files;
	var opts;
	var errs;
	var err;
	var i;

	opts = copy( DEFAULTS );
	if ( arguments.length > 0 ) {
		err = validate( opts, options );
		if ( err ) {
			throw err;
		}
	}

	// Find package.json files:
	files = glob.sync( opts.pattern, {
		'cwd': opts.dir,
		'ignore': opts.ignore,
		'realpath': true
	});

	errors = [];
	for ( i = 0; i < files.length; i++ ) {
		errs = lint( files[ i ] );
		if ( errs ) {
			errors = errors.concat( errs );
		}
	}

	return errors;
}


// EXPORTS //

module.exports = lintSync;
