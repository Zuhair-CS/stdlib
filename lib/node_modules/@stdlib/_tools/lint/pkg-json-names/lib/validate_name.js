/**
* @license Apache-2.0
*
* Copyright (c) 2025 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

// MODULES //

var resolve = require( 'path' ).resolve;
var relative = require( 'path' ).relative;
var dirname = require( 'path' ).dirname;
var join = require( 'path' ).join;
var startsWith = require( '@stdlib/string/starts-with' );
var format = require( '@stdlib/string/format' );
var rootDir = require( '@stdlib/_tools/utils/root-dir' );


// VARIABLES //

var STDLIB_PREFIX = '@stdlib/';
var PROJECT_ROOT = rootDir();
var STDLIB_DIR = join( PROJECT_ROOT, 'lib', 'node_modules', '@stdlib' );


// MAIN //

/**
* Validates that a package name matches its directory location.
*
* @param {string} fpath - file path
* @param {Object} pkg - package.json content
* @returns {(Object|null)} validation error or null
*/
function validateName( fpath, pkg ) {
	var relativePath;
	var expected;
	var dirPath;
	var actual;

	// Check if name field exists:
	if ( !pkg.name ) {
		return {
			'message': 'Missing "name" field in package.json'
		};
	}

	// Calculate expected name based on directory structure:
	dirPath = dirname( resolve( fpath ) );

	// Skip files that are not within the stdlib directory:
	if ( !startsWith( dirPath, STDLIB_DIR ) ) {
		return null;
	}

	relativePath = relative( STDLIB_DIR, dirPath );
	expected = STDLIB_PREFIX + relativePath.replace( /\\/g, '/' );

	actual = pkg.name;

	// Validate name starts with @stdlib/:
	if ( !startsWith( actual, STDLIB_PREFIX ) ) {
		return {
			'expected': expected,
			'actual': actual,
			'message': format( 'Package name must start with "@stdlib/" (got: "%s")', actual )
		};
	}

	// Validate name matches directory structure:
	if ( actual !== expected ) {
		return {
			'expected': expected,
			'actual': actual,
			'message': format( 'Package name "%s" does not match directory structure (expected: "%s")', actual, expected )
		};
	}

	return null;
}


// EXPORTS //

module.exports = validateName;
