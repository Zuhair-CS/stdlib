/**
* @license Apache-2.0
*
* Copyright (c) 2025 The Stdlib Authors.
*
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
*
*    http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
*/

'use strict';

var Linter = require( 'eslint' ).Linter;
var rule = require( './../lib' );

var linter = new Linter();

// Generate source code containing nested function without dependencies:
var code = [
	'function outer() {',
	'  function inner() {',
	'    return 42;',
	'  }',
	'  return inner();',
	'}'
].join( '\n' );

// Define the ESLint configuration:
var config = {
	'rules': {
		'no-unnecessary-nested-functions': 'error'
	}
};

// Register the rule:
linter.defineRule( 'no-unnecessary-nested-functions', rule );

// Lint the code:
var out = linter.verify( code, config );
console.log( out );
/* =>
	[
		{
			'ruleId': 'no-unnecessary-nested-functions',
			'severity': 2,
			'message': 'Function \'inner\' should be moved to module scope.',
			'line': 2,
			'column': 3,
			'nodeType': 'FunctionDeclaration',
			'endLine': 4,
			'endColumn': 4
		}
	]
*/
